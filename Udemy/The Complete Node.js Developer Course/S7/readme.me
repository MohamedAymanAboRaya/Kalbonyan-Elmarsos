## The Complete Node.js Developer Course (3rd Edition)



## Web Servers (Weather App)

### Hello Express

web-server

- src


```javascript
const express = require('express')
const app = express()
app.get('', (req, res) => res.send('Hello express!'))
app.get('/help', (req, res) => res.send('Help page'))
app.get('/about', (req, res) => res.send('About'))
app.get('/weather', (req, res) => res.send('Your weather'))
app.listen(3000, () => console.log('Server is up on port 3000.'))
```

```console
nodemon src/app.js
```

### Serving up HTML and JSON

```javascript
const express = require('express')
const app = express()
// route
app.get('', (req, res) => res.send('<h1>Weather</h1>'))
app.get('/help', (req, res) => res.send([
  { name: 'Andrew' }, { name: 'Sarah'}
]))
app.get('/about', (req, res) => res.send('<h1>About</h1>'))
app.get('/weather', (req, res) => res.send({
  forecast: 'It is sunny',
  location: 'Singapore'
}))
app.listen(3000, () => console.log('Server is up on port 3000.'))
```

Chrome Browser

- http://localhost:3000
- http://localhost:3000/help
- http://localhost:3000/about
- http://localhost:3000/weather

### Serving up Static Assets

web-server

- public (exposed by the web server)
- src

```javascript
const express = require('express')
const path = require('path')
const app = express()
console.log(__dirname)
console.log(__filename)
const publicDirectoryPath = path.join(__dirname, '../public')
// html static assets
app.use(express.static(publicDirectoryPath))
// route
app.get('/weather', (req, res) => res.send({
  forecast: 'It is sunny',
  location: 'Singapore'
}))
app.listen(3000, () => console.log('Server is up on port 3000.'))
```

Chrome Browser

- http://localhost:3000
- http://localhost:3000/index.html
- http://localhost:3000/help.html
- http://localhost:3000/about.html
- http://localhost:3000/weather


### Serving up CSS, JS, Images, and More

web-server

- public (exposed by the web server)
  - css
  - img
- src


### Dynamic Pages with Templating

[hbs](https://github.com/pillarjs/hbs)

web-server

- public (exposed by the web server)
  - css
  - img
- src
- views (contains .hbs files)

```javascript
// app.js
const express = require('express')
const path = require('path')
const app = express()
const publicDirectoryPath = path.join(__dirname, '../public')
app.use(express.static(publicDirectoryPath))
app.set('view engine', 'hbs')
app.get('', (req, res) => {
  res.render('index', {
    title: 'Weather',
    name: 'Andrew Mead'
  })
})
app.get('/about', (req, res) => {
  res.render('about', {
    title: 'About Me',
    name: 'Andrew Mead'
  })
})
app.get('/help', (req, res) => {
  res.render('help', {
    helpText: 'This is some helpful text.'
  })
})
app.get('/weather', (req, res) => res.send({
  forecast: 'It is sunny',
  location: 'Singapore'
}))
app.listen(3000, () => console.log('Server is up on port 3000.'))
```

```html
<!-- index.hbs -->
<!DOCTYPE html>

<html>

<head>
  <link rel="stylesheet" href="/css/styles.css">
</head>

<body>
  <h1>{{title}}</h1>
  <p>Created by {{name}}</p>
</body>

</html> 
```



### Customizing the Views Directory

web-server

- public (exposed by the web server)
  - css
  - img
- src
- templates (contains .hbs files)

```javascript
const express = require('express')
const path = require('path')
const app = express()
// Define paths for Express config
const publicDirectoryPath = path.join(__dirname, '../public')
const viewsPath = path.join(__dirname, '../templates')
// Setup handlebars engine and views location
app.set('view engine', 'hbs')
app.set('views', viewsPath)
// Setup static directory to serve
app.use(express.static(publicDirectoryPath))
app.get('', (req, res) => {
  res.render('index', {
    title: 'Weather',
    name: 'Andrew Mead'
  })
})
app.get('/about', (req, res) => {
  res.render('about', {
    title: 'About Me',
    name: 'Andrew Mead'
  })
})
app.get('/help', (req, res) => {
  res.render('help', {
    helpText: 'This is some helpful text.'
  })
})
app.get('/weather', (req, res) => res.send({
  forecast: 'It is sunny',
  location: 'Singapore'
}))
app.listen(3000, () => console.log('Server is up on port 3000.'))
```


### Advanced Templating

web-server

- public (exposed by the web server)
  - css
  - img
- src
- templates (contains .hbs files)
  - partials
  - views

```javascript
const express = require('express')
const path = require('path')
const hbs = require('hbs')
const app = express()
// Define paths for Express config
const publicDirectoryPath = path.join(__dirname, '../public')
const viewsPath = path.join(__dirname, '../templates/views')
const partialsPath = path.join(__dirname, '../templates/partials')
// Setup handlebars engine and views location
app.set('view engine', 'hbs')
app.set('views', viewsPath)
hbs.registerPartials(partialsPath)
// Setup static directory to serve
app.use(express.static(publicDirectoryPath))
app.get('', (req, res) => {
  res.render('index', {
    title: 'Weather',
    name: 'Andrew Mead'
  })
})
app.get('/about', (req, res) => {
  res.render('about', {
    title: 'About Me',
    name: 'Andrew Mead'
  })
})
app.get('/help', (req, res) => {
  res.render('help', {
    helpText: 'This is some helpful text.',
    title: 'Help',
    name: 'Andrew Mead'
  })
})
app.get('/weather', (req, res) => res.send({
  forecast: 'It is sunny',
  location: 'Singapore'
}))
app.listen(3000, () => console.log('Server is up on port 3000.'))
```

```hbs
<!-- partials/header.hbs -->
<h1>{{title}}</h1>
<div>
  <a href="/">Weather</a>
  <a href="/about">About</a>
  <a href="/help">Help</a>
</div>
```

```hbs
<!-- partials/footer.hbs -->
<p>Created by {{name}}</p> 
```

```hbs
<!-- views/index.hbs -->
<!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  {{>header}}
  {{>footer}}
</body>
</html> 
```


### 404 Pages

```javascript
...
app.get('/help/*', (req, res) => {
  res.render('404', {
    title: '404',
    name: 'Andrew Mead',
    errorMessage: 'Help article not found.'
  })
})
app.get('*', (req, res) => {
  res.render('404', {
    title: '404',
    name: 'Andrew Mead',
    errorMessage: 'Page not found.'
  })
})
app.listen(3000, () => console.log('Server is up on port 3000.'))
```

```hbs
<!-- views/404.hbs -->
<!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  {{>header}}
  <p>{{errorMessage}}</p>
  {{>footer}}
</body>
</html> 
```
